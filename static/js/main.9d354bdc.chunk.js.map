{"version":3,"sources":["components/JobListing.js","App.js","index.js"],"names":["JobListing","job","logo","company","isNew","featured","position","role","level","postedAt","contract","location","languages","tools","handleTagClick","tags","push","className","src","alt","map","tag","onClick","App","useState","jobs","setJobs","filters","setFilters","useEffect","data","includes","filteredJobs","filter","length","every","console","log","passedFilter","f","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MA8CeA,EA5CI,SAAC,GAIb,IAAD,IAJeC,IACjBC,EAGE,EAHFA,KAAMC,EAGJ,EAHIA,QAASC,EAGb,EAHaA,MAAOC,EAGpB,EAHoBA,SAAUC,EAG9B,EAH8BA,SAAUC,EAGxC,EAHwCA,KAAMC,EAG9C,EAH8CA,MAAOC,EAGrD,EAHqDA,SAAUC,EAG/D,EAH+DA,SAAUC,EAGzE,EAHyEA,SAAUC,EAGnF,EAHmFA,UAAWC,EAG9F,EAH8FA,MAElGC,EACI,EADJA,eAGMC,EAAO,CAACR,EAAMC,GASpB,OAPGI,GACDG,EAAKC,KAAL,MAAAD,EAAI,YAASH,IAEZC,GACDE,EAAKC,KAAL,MAAAD,EAAI,YAASF,IAIf,sBAAKI,UAAS,kEACZZ,GAAY,4CADA,wBAAd,UAGE,8BACE,qBAAKY,UAAU,wDAAyDC,IAAKhB,EAAMiB,IAAKhB,MAE1F,sBAAKc,UAAU,qCAAf,UACE,qBAAIA,UAAU,oCAAd,eAAqDd,EACpDC,GAAU,sBAAMa,UAAU,iFAAhB,iBACVZ,GAAa,sBAAMY,UAAU,iFAAhB,yBAEd,oBAAIA,UAAU,yBAAd,SAAwCX,IACxC,oBAAGW,UAAU,wBAAb,UAAsCR,EAAtC,SAAmDC,EAAnD,SAAgEC,QAElE,qBAAKM,UAAU,0HAAf,SAEIF,EACEA,EAAKK,KAAI,SAACC,GAAD,OACN,sBACCC,QAAS,kBAAMR,EAAeO,IAC9BJ,UAAU,uFAFX,SAEmGI,OAClG,S,OCyCCE,MA5Ef,WAAgB,IAAD,EACWC,mBAAS,IADpB,mBACNC,EADM,KACAC,EADA,OAEiBF,mBAAS,IAF1B,mBAENG,EAFM,KAEGC,EAFH,KAIbC,qBAAU,kBAAMH,EAAQI,KAAO,IAE/B,IAkBMhB,EAAiB,SAACO,GAEnBM,EAAQI,SAASV,IACpBO,EAAW,GAAD,mBAAKD,GAAL,CAAcN,MAWpBW,EAAeP,EAAKQ,QAhCH,SAAC,GAAqC,IAApC1B,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,MAAOK,EAAsB,EAAtBA,MAAOD,EAAe,EAAfA,UAE3C,GAAsB,IAAnBe,EAAQO,OACT,OAAO,EAGT,IAAMnB,EAAO,CAACR,EAAMC,GASpB,OAPGI,GACDG,EAAKC,KAAL,MAAAD,EAAI,YAASH,IAEZC,GACDE,EAAKC,KAAL,MAAAD,EAAI,YAASF,IAGRc,EAAQQ,OAAM,SAAAF,GAAM,OAAIlB,EAAKgB,SAASE,SAsB/C,OAFAG,QAAQC,IAAIZ,GAGV,qCACE,wBAAQR,UAAU,sBAAlB,SACE,qBAAKA,UAAU,SAASC,IAAI,+EAA+EC,IAAI,aAEjH,sBAAKF,UAAU,mBAAf,UAEIU,EAAQO,OAAS,GACb,sBAAKjB,UAAS,sEAAd,UACGU,EAAQP,KAAI,SAACa,GAAD,OACb,sBACEhB,UAAU,yDACVK,QAAS,kBAzBEgB,EAyBsBL,OAxB/CL,EAAWD,EAAQM,QAAO,SAAAM,GAAC,OAAIA,IAAMD,MADb,IAACA,GAuBb,SAIE,uBAAMrB,UAAU,yDAAhB,eAA4EgB,UAG9E,wBAAQX,QA1BD,WACnBM,EAAW,KAyBgCX,UAAU,kCAAzC,sBAIQ,IAAhBQ,EAAKS,OACH,iDAEAF,EAAaZ,KAAI,SAAAnB,GAAG,OACpB,cAAC,EAAD,CAAYA,IAAKA,EAAkBa,eAAgBA,GAAxBb,EAAIuC,cCnEzCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.9d354bdc.chunk.js","sourcesContent":["import React from 'react'; \n\nconst JobListing = ({job: {\n    logo, company, isNew, featured, position, role, level, postedAt, contract, location, languages, tools\n  }, \n  handleTagClick,\n}) => {\n\n  const tags = [role, level];\n\n  if(languages) {\n    tags.push(...languages);\n  }\n  if(tools) {\n    tags.push(...tools);\n  }\n\n  return (\n  <div className={`flex flex-col bg-white shadow-md my-16 mx-8 p-5 rounded ${\n    featured && 'border-l-4 border-indigo-300 border-solid'\n  } lg:flex-row lg:my-4`}>\n    <div>\n      <img className=\"-mt-12 mb-4 w-20 h-20 lg:mt-0 lg:h-24 lg:w-24 lg:my-0\"  src={logo} alt={company} />\n    </div>\n    <div className=\"flex flex-col justify-between ml-3\">\n      <h3 className=\"font-bold text-md text-indigo-400\">  {company} \n      {isNew && (<span className=\"bg-indigo-400 text-indigo-100 font-bold p-2 rounded-full m-1 uppercase text-xs\">NEW</span>)} \n      {featured && (<span className=\"bg-yellow-400 text-indigo-100 font-bold p-2 rounded-full m-1 uppercase text-xs\">FEATURED</span>)}\n      </h3>\n      <h2 className=\"font-bold text-lg my-3\">{position}</h2>\n      <p className=\"text-sm text-gray-700\">{postedAt} · {contract} · {location}</p>\n    </div>\n    <div className=\"flex flex-wrap items-center mt-4 mx-4 pt-4 border-t border-gray-300 border-solid lg:ml-auto lg:border-0 lg:pt-0 lg:mt-0\">\n      {\n        tags ? \n          tags.map((tag) => \n            (<span \n              onClick={() => handleTagClick(tag)}\n              className=\"cursor-pointer text-indigo-400 bg-indigo-100 font-bold mr-4 mb-4 p-2 rounded lg:mb-0\">{tag}</span>)\n          ) : ''\n      }\n      \n    </div>\n  </div>\n)};\n\nexport default JobListing;","import React, { useState, useEffect } from 'react';\nimport JobListing from './components/JobListing';\nimport data from './assests/data.json';\n\nfunction App() {\n  const [jobs, setJobs] = useState([]);\n  const [filters, setFilters] = useState([]);\n\n  useEffect(() => setJobs(data), []);\n\n  const filterFunction = ({role, level, tools, languages}) => {\n\n    if(filters.length === 0 ) {\n      return true;\n    }\n\n    const tags = [role, level];\n\n    if(languages) {\n      tags.push(...languages);\n    }\n    if(tools) {\n      tags.push(...tools);\n    }\n\n    return filters.every(filter => tags.includes(filter));\n  }\n\n  const handleTagClick = (tag) => {\n    // avoid re-adding a tag \n    if(filters.includes(tag)) return; \n    setFilters([...filters, tag]);\n  }\n\n  const handleFilterClick = (passedFilter) => {\n    setFilters(filters.filter(f => f !== passedFilter));\n  }\n\n  const clearFilters = () => {\n    setFilters([]);\n  }\n\n  const filteredJobs = jobs.filter(filterFunction);\n\n  \n  console.log(jobs);\n\n  return (\n    <>\n      <header className=\"bg-indigo-100 mb-12\">\n        <img className=\"w-full\" src=\"https://mitchellzilberg.github.io/job-board-app/images/bg-header-desktop.svg\" alt=\"bg-img\" />\n      </header>\n      <div className=\"container m-auto\">\n        {\n          filters.length > 0 && (\n              <div className={`flex bg-white shadow-md -my-20 mb-16 mx-8 p-5 rounded z-10 relative`}> \n                {filters.map((filter) => (\n                <span\n                  className=\"cursor-pointer mr-4 mb-4 p-2 font-bold roundedlgm:mb-0\"\n                  onClick={() => handleFilterClick(filter)}\n                >\n                  <span className=\"cursor-pointer text-indigo-400 bg-indigo-100 font-bold\">x {filter}</span>\n                </span>\n                ))}\n                <button onClick={clearFilters} className=\"font-bold text-gray-700 ml-auto\">Clear</button>\n        </div>\n        )}\n      {\n        jobs.length === 0 ? (\n          <p>Fetching jobs...</p>\n        ) : (\n          filteredJobs.map(job => (\n          <JobListing job={job} key={job.id} handleTagClick={handleTagClick}/>\n        )))\n      }\n      </div>\n    </>\n  );\n}\n\nexport default App;\n\n// TODO\n// 1. get familiar with the data and design x\n// 2. create job board component x\n// 3. pass data to the job board component \n// 4. stlye job board component\n// 5. add filter functionality\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}